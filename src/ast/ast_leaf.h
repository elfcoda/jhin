/* this file is generated by syntax.py, do not modify it */

#pragma once

#include <string>
#include <unordered_map>


namespace jhin
{
namespace ast
{

#define AST_LEAF_START	1

enum EASTLeaf
{
	AST_LEAF_RE_ID = AST_LEAF_START,
	AST_LEAF_RE_INT,
	AST_LEAF_RE_VALUE,
	AST_LEAF_RE_DECIMAL,
	AST_LEAF_RE_STRING,
	AST_LEAF_TRUE,
	AST_LEAF_FALSE,
	AST_LEAF_OBJECT,
	AST_LEAF_BOOL,
	AST_LEAF_INT,
	AST_LEAF_FLOAT,
	AST_LEAF_DOUBLE,
	AST_LEAF_LONG,
	AST_LEAF_STRING,
	AST_LEAF_UNIT,
	AST_LEAF_THIS,
	AST_LEAF_TYPE,
};

const std::unordered_map<unsigned, std::string> ast_leafid_to_string = {
	{1, "RE_ID"}, {2, "RE_INT"}, {3, "RE_VALUE"}, {4, "RE_DECIMAL"}, {5, "RE_STRING"}, {6, "TRUE"}, {7, "FALSE"}, {8, "OBJECT"}, {9, "BOOL"}, 
	{10, "INT"}, {11, "FLOAT"}, {12, "DOUBLE"}, {13, "LONG"}, {14, "STRING"}, {15, "UNIT"}, {16, "THIS"}, {17, "TYPE"}
};

const std::unordered_map<std::string, unsigned> ast_string_to_leafid = {
	{"RE_ID", 1}, {"RE_INT", 2}, {"RE_VALUE", 3}, {"RE_DECIMAL", 4}, {"RE_STRING", 5}, {"TRUE", 6}, {"FALSE", 7}, {"OBJECT", 8}, {"BOOL", 9}, 
	{"INT", 10}, {"FLOAT", 11}, {"DOUBLE", 12}, {"LONG", 13}, {"STRING", 14}, {"UNIT", 15}, {"THIS", 16}, {"TYPE", 17}
};

};    /* namespace ast */
};    /* namespace jhin */


